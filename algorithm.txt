Algorithm in STL:

1)sort(first_iterator, last_iterator) – To sort the given vector.

2)reverse(first_iterator, last_iterator) – To reverse a vector.

3)*max_element (first_iterator, last_iterator) – To find the maximum element of a vector.

4)*min_element (first_iterator, last_iterator) – To find the minimum element of a vector.

5)accumulate(first_iterator, last_iterator, initial value of sum) – Does the summation of vector elements

6)count(first_iterator, last_iterator,x) – To count the occurrences of x in vector.

7)find(first_iterator, last_iterator, x) – Points to last address of vector ((name_of_vector).end()) if element is not present in vector.

8)binary_search(first_iterator, last_iterator, x) – Tests whether x exists in sorted vector or not.

9)lower_bound(first_iterator, last_iterator, x) – returns an iterator pointing to the first element in the range [first,last) which has a value not less than ‘x’.

10)upper_bound(first_iterator, last_iterator, x) – returns an iterator pointing to the first element in the range [first,last) which has a value greater than ‘x’

11)arr.erase(position to be deleted) – This erases selected element in vector and shifts and resizes the vector elements accordingly.

12)arr.erase(unique(arr.begin(),arr.end()),arr.end()) – This erases the duplicate occurrences in sorted vector in a single line.

13)next_permutation(first_iterator, last_iterator) – This modified the vector to its next permutation.

14)prev_permutation(first_iterator, last_iterator) – This modified the vector to its previous permutation

15)distance(first_iterator,desired_position) – It returns the distance of desired position from the first iterator.This function is very useful while finding the index
